grammar de.nittka.tooling.xarchive.Xarchive with org.eclipse.xtext.common.Terminals

generate xarchive "http://www.nittka.de/tooling/xarchive/Xarchive"

Model:
	ArchiveConfig|Document;

ArchiveConfig: 
	{ArchiveConfig}
	types+=CategoryType*
	searches+=Search*
;
CategoryType: "categoriesFor" name=ID required?="required"? "{"
	category+=Category (","category+=Category)*
	"}"
;
Category: name=ID (description=STRING)? 
	(
		("{"category+=Category (","category+=Category)*"}")
		|
		("shortcutFor" "(" shortCuts+=ShortCut ("," shortCuts+=ShortCut)*")")
	)?;

Search:
	"search" ("named" id=ID)?
	search=SearchExpression
;

SearchExpression returns SearchExpression:
	OrSearchExpression
;

OrSearchExpression returns SearchExpression:
	AndSearchExpression ({OrSearchExpression.left=current} "||" right=AndSearchExpression)*
;

AndSearchExpression returns SearchExpression:
	AtomicSearchExpression ({AndSearchExpression.left=current} "&&" right=AtomicSearchExpression)*
;

AtomicSearchExpression returns SearchExpression:
	{NegationSearchExpression}'!' negated=AtomicSearchExpression |
	SearchReference |
	ParenthesizedSearchExpression |
	CategorySearch|
	TagSearch|
	DescriptionSearch
;


ParenthesizedSearchExpression returns SearchExpression:
	'(' SearchExpression')'
;

SearchReference returns SearchExpression:
	"reuse" {SearchReference} search=[Search]
;

CategorySearch returns SearchExpression:
	"category" {CategorySearch} category=ShortCut
	(orAbove?="orAbove"? & orBelow?="orBelow"?)
;

TagSearch returns SearchExpression:
	"tag" {TagSearch} tag=ID
;

DescriptionSearch returns SearchExpression:
	"description" {DescriptionSearch} description=STRING
;

Document: 
	(futureDoc?="@futureDoc")?
	file=DocumentFileName
	("namespace" namespace=ID)?
	("+" additionalFiles+=DocumentFileName)*
	(
		("date" docDate=ID)?
			&
		("reference" reference=ID)?
	)
	categories+=CategoryRef*
	(("tags"":" tags+=ID)("," tags+=ID)*";")?
	("description" description=STRING)?
	seeAlso+=SeeAlso*
	(fullText=FullTextForSearch)?
;
DocumentFileName hidden(): fileName=ID'.'extension=ID;
FullTextForSearch: text=FULLTEXT;

CategoryRef: type=[CategoryType]":" (categories+=[Category] ("," categories+=[Category])*)?";";
ShortCut: type=[CategoryType]":" category=[Category];
SeeAlso: "->" ref=[Document|FQN] (description=STRING)?;

FQN: (ID'.')?ID;

terminal ID: ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'-')*;
terminal FULLTEXT: "'''" IN_FULLTEXT* ("'''"| ("'" "'"?)? EOF);
terminal fragment IN_FULLTEXT : "''" !("'") | "'" !("'")| !("'");